Como en cualquier lenguaje de programación, hasta donde yo sé, usando sockets hay una secuencia básica estándar que 
hay que seguir para crear un servidor y otra para un cliente.

Para el cliente, que es el más sencillo, la secuencia de llamadas es:

1.- Socket. Primero creo el socket en el cliente que usaré para establecer las conexiones con el servidor.
2.- Connect. Establezco la conexión con el servidor.
3.- Send/Recv. Fase de envío/recepción de datos entre cliente y servidor.
4.- Close. Una vez terminado el intercambio de datos se cierra el socket, terminando así la conexión.

Para el servidor es un poco más complejo.

1.- Socket. Primero creo el socket necesario en el servidor para recibir conexiones de clientes.
2.- Bind. Es necesario enlazar el servidor con una dirección local del host.
3.- Listen. El socket pasa a escuchar y espera la recepción de conexiones de clientes.
4.- Accept. En este punto el código se bloquea esperando una nueva conexión. Es importante tener en cuenta que este
    método devuelve un nuevo objeto socket diferente del creado en el paso uno.
5.- Send/Recv. Fase de envío/recepción de datos entre cliente y servidor.
6.- Close. Una vez terminado el intercambio de datos se cierra el socket, terminando así la conexión.

